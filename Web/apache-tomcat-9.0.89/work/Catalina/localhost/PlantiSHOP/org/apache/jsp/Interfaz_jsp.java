/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2025-04-09 15:21:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import auxs.Cortes;
import auxs.Epistula;
import auxs.Hash;
import javax.mail.MessagingException;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.DateTimeException;
import java.time.format.DateTimeFormatter;

public final class Interfaz_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


    Cortes v;
    Epistula e;
    Hash h;
    String cV;
    Connection c;
    Statement s;
    ResultSet r;
    File f;
    FileWriter w;

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(15);
    _jspx_imports_classes.add("auxs.Cortes");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("auxs.Hash");
    _jspx_imports_classes.add("java.io.FileWriter");
    _jspx_imports_classes.add("java.time.LocalDateTime");
    _jspx_imports_classes.add("javax.mail.MessagingException");
    _jspx_imports_classes.add("java.io.IOException");
    _jspx_imports_classes.add("java.io.File");
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("auxs.Epistula");
    _jspx_imports_classes.add("java.sql.DriverManager");
    _jspx_imports_classes.add("java.time.DateTimeException");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"es-MX\">\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>O</title>\n");
      out.write("        <link rel=\"icon\" type=\"image/x-icon\" href=\"imgs/logo.png\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("        <style>\n");
      out.write("            body {\n");
      out.write("                background-image: url(imgs/fondo2.jpg);\n");
      out.write("                background-repeat: no-repeat;\n");
      out.write("                background-size: cover;\n");
      out.write("                background-attachment: fixed;\n");
      out.write("                background-position: center center;\n");
      out.write("            }\n");
      out.write("            div {\n");
      out.write("                background-color: whitesmoke;\n");
      out.write("                width: 60%;\n");
      out.write("                height: 20em;\n");
      out.write("                margin: 15em auto 0 auto;\n");
      out.write("                border: 2px double black;\n");
      out.write("                display: flex;\n");
      out.write("                align-items: center;\n");
      out.write("                justify-content: center;\n");
      out.write("            }\n");
      out.write("            h1, h3 {\n");
      out.write("                text-align: center;\n");
      out.write("                font-family: Agrandir;\n");
      out.write("            }\n");
      out.write("            h1 {\n");
      out.write("                font-size: 2.5vw;\n");
      out.write("            }\n");
      out.write("            h3 {\n");
      out.write("                font-size: 1vw;\n");
      out.write("                color: red;\n");
      out.write("            }\n");
      out.write("            img {\n");
      out.write("                display: block;\n");
      out.write("                width: 45%;\n");
      out.write("                margin: 2.5em auto 0 auto;\n");
      out.write("            }\n");
      out.write("            form {\n");
      out.write("                background-color: #cccccc;\n");
      out.write("                width: 75%;\n");
      out.write("                padding: 5em;\n");
      out.write("                margin: 18em auto 0 auto;\n");
      out.write("                border: 2px double black;\n");
      out.write("            }\n");
      out.write("            #in {\n");
      out.write("                display: block;\n");
      out.write("                width: 80%;\n");
      out.write("                margin-left: auto;\n");
      out.write("                margin-right: auto;\n");
      out.write("                border: 2px solid black;\n");
      out.write("                border-radius: 5px;\n");
      out.write("                text-align: center;\n");
      out.write("                font-family: Arial;\n");
      out.write("            }\n");
      out.write("            #sm {\n");
      out.write("                width: 40%;\n");
      out.write("                margin-top: 2em;\n");
      out.write("                background-color: navy;\n");
      out.write("                color: white;\n");
      out.write("                font-weight: bold;\n");
      out.write("                font-family: Agrandir;\n");
      out.write("                border: 2px double white;\n");
      out.write("            }\n");
      out.write("            #sm:hover {\n");
      out.write("                background-color: blue;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("        <script>\n");
      out.write("            document.addEventListener('DOMContentLoaded', function () {\n");
      out.write("                window.location.hash = \"no-back-button\";\n");
      out.write("                window.location.hash = \"Again-No-back-button\";\n");
      out.write("                window.onhashchange = function () {\n");
      out.write("                    window.location.hash = \"no-back-button\";\n");
      out.write("                };\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        ");

            try {
                Class.forName("com.mysql.cj.jdbc.Driver").newInstance();
                c = DriverManager.getConnection("jdbc:mysql://host/bd", "", "");
                s = c.createStatement();
                switch (request.getParameter("x")) {
                    case "C": {
                        if (s.executeQuery("SELECT * FROM . WHERE .='"+request.getParameter("ce")+"'").next()) {
                            out.print("<div>");
                                out.print("<h1>Registro INVALIDO</h1>");
                                out.print("<img src='err.png' alt='E'/>");
                            out.print("</div>");
                            out.print("<script>setTimeout(function () { history.back(); }, 5000);</script>");
                        } else {
                            e = new Epistula();
                            e.eMail(request.getParameter("ce"), "Nuevo REGISTRO", "¡Bienvenido a PlantiSHOP!");
                            h = new Hash();
                            s.executeUpdate("INSERT INTO . VALUES ('"+request.getParameter("ce")+"','"+h.hashPBKDF2(request.getParameter("c1"))+"','"+h.hashPBKDF2(request.getParameter("c2"))+"','"+request.getParameter("n")+"','"+request.getParameter("ap")+"','"+request.getParameter("am")+"','"+h.hashPBKDF2(request.getParameter("u"))+"',NULL,5,NULL,2,NULL,FALSE)");
                            out.print("<div>");
                                out.print("<h1>Usuario correctamente REGISTRADO</h1>");
                                out.print("<img src='csql.png' alt='C'/>");
                            out.print("</div>");
                            out.print("<script>setTimeout(function () { location.assign('Sesion.html'); }, 5000);</script>");
                        }
                    } break;
                    case "Cj": {
                        if (s.executeQuery("SELECT * FROM . WHERE .='"+session.getAttribute("u")+"' AND .='"+request.getParameter("n")+"'").next()) {
                            out.print("<div>");
                                out.print("<h1>Registro INVALIDO</h1>");
                                out.print("<img src='err.png' alt='E'/>");
                            out.print("</div>");
                        } else {
                            s.executeUpdate("INSERT INTO .() VALUES ('"+session.getAttribute("u")+"','"+request.getParameter("n")+"','"+request.getParameter("t")+"','"+request.getParameter("txt")+"',"+request.getParameter("p")+")");
                            out.print("<div>");
                                out.print("<h1>Elemento correctamente REGISTRADO</h1>");
                                out.print("<img src='csql.png' alt='C'/>");
                            out.print("</div>");
                        }
                        out.print("<script>setTimeout(function () { history.back(); }, 5000);</script>");
                    } break;
                    case "R": {
                        r = s.executeQuery("SELECT * FROM . WHERE .='"+request.getParameter("ce")+"'");
                        if (r.next() && r.getTimestamp(0) != null) {
                            if (r.getTimestamp(0).toLocalDateTime().isEqual(LocalDateTime.now())) { s.executeUpdate("UPDATE . SET .=5,.=NULL WHERE .='"+request.getParameter("ce")+"'"); }
                        }
                        if (r.first() && r.getByte(0) > 0) {
                            if (request.getParameter("c1").equals(r.getString(0)) && request.getParameter("c2").equals(r.getString(0))) {
                                v = new Cortes();
                                cV = v.cV();
                                s.executeUpdate("UPDATE . SET .='"+cV+"' WHERE .='"+request.getParameter("ce")+"'");
                                e = new Epistula();
                                e.eMail(request.getParameter("ce"), "Código de Verificación", cV);
                                out.print("<form action='Interfaz.jsp' method='post'>");
                                    out.print("<input name='x' type='hidden' value='R2'>");
                                    out.print("<input name='ce' type='hidden' value='"+request.getParameter("ce")+"'>");
                                    out.print("<h1>Para Acceder, ingresa el Codigo de Verificación de 10 Digitos que enviamos a tu Correo Electronico:</h1>");
                                    out.print("<input id='in' name='cv' type='text' pattern='[0-9A-Z]{10}' maxlength='10' required>");
                                    out.print("<input id='sm' type='submit' value='ACCEDER'>");
                                out.print("</form>");
                            } else {
                                if (r.getByte(0) == 1) { s.executeUpdate("UPDATE . SET .='"+LocalDateTime.now().plusDays(1L).format(DateTimeFormatter.ofPattern("uuuu-MM-dd HH:mm:ss"))+"' WHERE .='"+request.getParameter("ce")+"'"); }
                                s.executeUpdate("UPDATE . SET .="+(r.getByte(0) - 1)+" WHERE .='"+request.getParameter("ce")+"'");
                                out.print("<div>");
                                    out.print("<h1>Contraseña(s) INCORRECTA(S)</h1>");
                                    out.print("<h3>Intentos RESTANTES: "+(r.getByte(0) - 1)+"</h3>");
                                    out.print("<img src='err.png' alt='E'/>");
                                out.print("</div>");
                                out.print("<script>setTimeout(function () { history.back(); }, 5000);</script>");
                            }
                        } else {
                            out.print("<div>");
                                out.print("<h1>Usuario INVALIDO</h1>");
                                out.print("<img src='err.png' alt='E'/>");
                            out.print("</div>");
                            out.print("<script>setTimeout(function () { history.back(); }, 5000);</script>");
                        }
                        r.close();
                    } break;
                    case "R2": {
                        r = s.executeQuery("SELECT * FROM . WHERE .='"+request.getParameter("ce")+"'");
                        if (r.next() && r.getTimestamp(0) != null) {
                            if (r.getTimestamp(0).toLocalDateTime().isEqual(LocalDateTime.now())) { s.executeUpdate("UPDATE . SET .=2,.=NULL WHERE .='"+request.getParameter("ce")+"'"); }
                        }
                        if (r.first() && r.getByte(0) > 0) {
                            if (request.getParameter("cv").equals(r.getString(0))) {
                                session.setAttribute("u", request.getParameter("ce"));
                                s.executeUpdate("UPDATE . SET .=NULL,.=5,.=NULL,.=2,.=NULL WHERE .='"+request.getParameter("ce")+"'");
                                out.print("<div>");
                                    out.print("<h1>¡Bienvenido a PlantiSHOP!</h1>");
                                    out.print("<img src='rsql.png' alt='R'/>");
                                out.print("</div>");
                                out.print("<script>setTimeout(function () { location.assign('Perfil.jsp'); }, 5000);</script>");
                            } else {
                                if (r.getByte(0) == 1) { s.executeUpdate("UPDATE . SET .='"+LocalDateTime.now().plusDays(2L).format(DateTimeFormatter.ofPattern("uuuu-MM-dd HH:mm:ss"))+"' WHERE .='"+request.getParameter("ce")+"'"); }
                                s.executeUpdate("UPDATE . SET .=NULL,.="+(r.getByte(0) - 1)+" WHERE .='"+request.getParameter("ce")+"'");
                                out.print("<div>");
                                    out.print("<h1>Verificación INCORRECTA</h1>");
                                    out.print("<h3>Intentos RESTANTES: "+(r.getByte(0) - 1)+"</h3>");
                                    out.print("<img src='err.png' alt='E'/>");
                                out.print("</div>");
                                out.print("<script>setTimeout(function () { location.assign('Sesion.html'); }, 5000);</script>");
                            }
                        } else {
                            out.print("<div>");
                                out.print("<h1>Acceso DENEGADO</h1>");
                                out.print("<img src='err.png' alt='E'/>");
                            out.print("</div>");
                            out.print("<script>setTimeout(function () { location.assign('Sesion.html'); }, 5000);</script>");
                        }
                        r.close();
                    } break;
                    case "U0": {
                        r = s.executeQuery("SELECT * FROM . WHERE .='"+session.getAttribute("u")+"'");
                        r.next();
                        if (request.getParameter("c1").equals(r.getString(0)) && request.getParameter("c2").equals(r.getString(0))) {
                            s.executeUpdate("UPDATE . SET .='"+request.getParameter("nc1")+"',.='"+request.getParameter("nc2")+"' WHERE .='"+session.getAttribute("u")+"'");
                            out.print("<div>");
                                out.print("<h1>Usuario correctamente ACTUALIZADO</h1>");
                                out.print("<img src='usql.png' alt='U'/>");
                            out.print("</div>");
                            out.print("<script>setTimeout(function () { location.assign('Sesion.html'); }, 5000);</script>");
                        } else {
                            out.print("<div>");
                                out.print("<h1>Actualización DENEGADA</h1>");
                                out.print("<img src='err.png' alt='E'/>");
                            out.print("</div>");
                            out.print("<script>setTimeout(function () { history.back(); }, 5000);</script>");
                        }
                        r.close();
                    } break;
                    case "U1": {
                        r = s.executeQuery("SELECT * FROM . WHERE .='"+session.getAttribute("u")+"'");
                        r.next();
                        if (request.getParameter("c1").equals(r.getString(0)) && request.getParameter("c2").equals(r.getString(0))) {
                            s.executeUpdate("UPDATE . SET .='"+request.getParameter("nc1")+"' WHERE .='"+session.getAttribute("u")+"'");
                            out.print("<div>");
                                out.print("<h1>Usuario correctamente ACTUALIZADO</h1>");
                                out.print("<img src='usql.png' alt='U'/>");
                            out.print("</div>");
                            out.print("<script>setTimeout(function () { location.assign('Sesion.html'); }, 5000);</script>");
                        } else {
                            out.print("<div>");
                                out.print("<h1>Actualización DENEGADA</h1>");
                                out.print("<img src='err.png' alt='E'/>");
                            out.print("</div>");
                            out.print("<script>setTimeout(function () { history.back(); }, 5000);</script>");
                        }
                        r.close();
                    } break;
                    case "U2": {
                        r = s.executeQuery("SELECT * FROM . WHERE .='"+session.getAttribute("u")+"'");
                        r.next();
                        if (request.getParameter("c1").equals(r.getString(0)) && request.getParameter("c2").equals(r.getString(0))) {
                            s.executeUpdate("UPDATE . SET .='"+request.getParameter("nc2")+"' WHERE .='"+session.getAttribute("u")+"'");
                            out.print("<div>");
                                out.print("<h1>Usuario correctamente ACTUALIZADO</h1>");
                                out.print("<img src='usql.png' alt='U'/>");
                            out.print("</div>");
                            out.print("<script>setTimeout(function () { location.assign('Sesion.html'); }, 5000);</script>");
                        } else {
                            out.print("<div>");
                                out.print("<h1>Actualización DENEGADA</h1>");
                                out.print("<img src='err.png' alt='E'/>");
                            out.print("</div>");
                            out.print("<script>setTimeout(function () { history.back(); }, 5000);</script>");
                        }
                        r.close();
                    } break;
                    case "D": {
                        r = s.executeQuery("SELECT * FROM . WHERE .='"+session.getAttribute("u")+"'");
                        r.next();
                        if (request.getParameter("c1").equals(r.getString(0)) && request.getParameter("c2").equals(r.getString(0))) {
                            s.executeUpdate("DELETE FROM . WHERE .='"+session.getAttribute("u")+"'");
                            out.print("<div>");
                                out.print("<h1>Usuario correctamente ELIMINADO</h1>");
                                out.print("<img src='dsql.png' alt='D'/>");
                            out.print("</div>");
                            out.print("<script>setTimeout(function () { location.assign('index.html'); }, 5000);</script>");
                        } else {
                            out.print("<div>");
                                out.print("<h1>Eliminación DENEGADA</h1>");
                                out.print("<img src='err.png' alt='E'/>");
                            out.print("</div>");
                            out.print("<script>setTimeout(function () { history.back(); }, 5000);</script>");
                        }
                        r.close();
                    } break;
                    case "Un": {
                        s.executeUpdate("UPDATE . SET .='"+request.getParameter("n")+"' WHERE .='"+session.getAttribute("u")+"'");
                        out.print("<script>history.back();</script>");
                    } break;
                    case "Uap": {
                        s.executeUpdate("UPDATE . SET .='"+request.getParameter("ap")+"' WHERE .='"+session.getAttribute("u")+"'");
                        out.print("<script>history.back();</script>");
                    } break;
                    case "Uam": {
                        s.executeUpdate("UPDATE . SET .='"+request.getParameter("am")+"' WHERE .='"+session.getAttribute("u")+"'");
                        out.print("<script>history.back();</script>");
                    } break;
                    case "Uu": {
                        s.executeUpdate("UPDATE . SET .='"+request.getParameter("u")+"' WHERE .='"+session.getAttribute("u")+"'");
                        out.print("<script>history.back();</script>");
                    } break;
                    case "Uigu": {
                        s.executeUpdate("UPDATE . SET .="+request.getParameter("t")+",.="+request.getParameter("ttxt")+" WHERE .='"+session.getAttribute("u")+"'");
                        out.print("<script>history.back();</script>");
                    } break;
                    case "Utxtj": {
                        s.executeUpdate("UPDATE . SET .='"+request.getParameter("txt")+"' WHERE .="+request.getParameter("id"));
                        out.print("<script>history.back();</script>");
                    } break;
                    case "Upj": {
                        s.executeUpdate("UPDATE . SET .="+request.getParameter("p")+" WHERE .="+request.getParameter("id"));
                        out.print("<script>history.back();</script>");
                    } break;
                    case "Upv": {
                        s.executeUpdate("UPDATE . SET .="+request.getParameter("p")+" WHERE .="+request.getParameter("id"));
                        out.print("<script>history.back();</script>");
                    } break;
                    case "Utxtv": {
                        s.executeUpdate("UPDATE . SET .='"+request.getParameter("txt")+"' WHERE .="+request.getParameter("id"));
                        out.print("<script>history.back();</script>");
                    } break;
                    case "D2": {
                        s.executeUpdate("DELETE FROM "+request.getParameter("t")+" WHERE .="+request.getParameter("id"));
                        out.print("<script>history.back();</script>");
                    } break;
                    case "B": {
                        r = s.executeQuery("SELECT * FROM . WHERE .="+request.getParameter("id"));
                        r.next();
                        s.executeUpdate("INSERT INTO .() VALUES ('"+r.getString(0)+"','"+session.getAttribute("u")+"','"+r.getString(0)+"','"+r.getString(0)+"',"+r.getFloat(0)+",'"+r.getString(0)+"',1,0,0,NULL,NULL,FALSE)");
                        out.print("<div>");
                            out.print("<h1>Compra REALIZADA</h1>");
                            out.print("<img src='csql.png' alt='C'/>");
                        out.print("</div>");
                        out.print("<script>setTimeout(function () { history.back(); }, 5000);</script>");
                        r.close();
                    } break;
                    case "B1": {
                        s.executeUpdate("UPDATE . SET .=2,.="+request.getParameter("n")+",.="+request.getParameter("pt")+",.='"+request.getParameter("u")+"',.='"+LocalDateTime.parse(request.getParameter("fh"), DateTimeFormatter.ofPattern("uuuu-MM-dd HH:mm:ss"))+"' WHERE .="+request.getParameter("id"));
                        out.print("<div>");
                            out.print("<h1>Notificación ENVIADA</h1>");
                            out.print("<img src='usql.png' alt='U'/>");
                        out.print("</div>");
                        out.print("<script>setTimeout(function () { history.back(); }, 5000);</script>");
                    } break;
                    case "B2": {
                        if (Boolean.parseBoolean(request.getParameter("sn"))) {
                            s.executeUpdate("UPDATE . SET .=3,.=FALSE WHERE .="+request.getParameter("id"));
                            out.print("<div>");
                                out.print("<h1>Oferta ACEPTADA</h1>");
                                out.print("<img src='usql.png' alt='U'/>");
                            out.print("</div>");
                        } else {
                            s.executeUpdate("UPDATE . SET .=1,.=0,.=0,.=NULL,.=NULL,.=TRUE WHERE .="+request.getParameter("id"));
                            out.print("<div>");
                                out.print("<h1>Oferta RECHAZADA</h1>");
                                out.print("<img src='bnot.png' alt='NB'/>");
                            out.print("</div>");
                        }
                        out.print("<script>setTimeout(function () { location.assign('Mensajeria.jsp#tV'); }, 5000);</script>");
                    } break;
                    case "B3": {
                        r = s.executeQuery("SELECT -.* FROM . (INNER JOIN . ON -.*=-.* (INNER JOIN . ON -.*=-.* (INNER JOIN . ON -.*=-.*))) WHERE -.*='"+session.getAttribute("u")+"' AND .="+request.getParameter("id"));
                        if (Boolean.parseBoolean(request.getParameter("sn"))) {
                            s.executeUpdate("UPDATE . SET .="+(r.getLong(0) + 1L)+" WHERE .="+r.getLong(0));
                            s.executeUpdate("INSERT INTO . VALUES ('"+r.getString(0)+"','"+r.getString(0)+"','"+r.getString(0)+"',TRUE,'"+r.getString(0)+"',"+r.getByte(0)+","+r.getFloat(0)+",'"+r.getString(0)+"','"+r.getString(0)+"')");
                            f = new File("D:\\C"+r.getLong(0)+".txt");
                            f.createNewFile();
                            w = new FileWriter(f);
                            w.write("Registro Comercial\n\nProducto: "+r.getString(0)+"\nVendedor: "+r.getString(0)+" "+r.getString(0)+" "+r.getString(0)+"\nComprador: "+r.getString(0)+" "+r.getString(0)+" "+r.getString(0)+"\nNo. de Lotes: "+r.getByte(0)+"\nCosto: $"+r.getFloat(0)+"\nFecha y Hora: "+r.getTimestamp(0).toLocalDateTime().format(DateTimeFormatter.ofPattern("d / MMM / uuuu -- h:mm a")).toUpperCase()+"\nUbicacion: "+r.getString(0));
                            w.close();
                            out.print("<div>");
                                out.print("<h1>Compra FINALIZADA</h1>");
                                out.print("<img src='byes.png' alt='YB'/>");
                            out.print("</div>");
                        } else {
                            s.executeUpdate("INSERT INTO . VALUES ('"+r.getString(0)+"','"+r.getString(0)+"','"+r.getString(0)+"',FALSE,'"+r.getString(0)+"')");
                            out.print("<div>");
                                out.print("<h1>Compra CANCELADA</h1>");
                                out.print("<img src='dsql.png' alt='D'/>");
                            out.print("</div>");
                        }
                        s.executeUpdate("DELETE FROM . WHERE .="+request.getParameter("id"));
                        out.print("<script>setTimeout(function () { history.back(); }, 5000);</script>");
                        r.close();
                    } break;
                    case "E": {
                        session.removeAttribute("u");
                        out.print("<script>location.assign('index.html');</script>");
                    } break;
                }
                s.close();
                c.close();
            } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | SQLException | IOException | DateTimeException | MessagingException e) {
                out.print("<script>alert('Lo sentimos, se produjo un ERROR... intentalo de NUEVO');</script>");
                out.print("<script>history.back();</script>");
            }
        
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
